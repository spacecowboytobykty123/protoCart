syntax = "proto3";

package cart;

option go_package = "cart.v1.crt";
import "google/api/annotations.proto";
import "protoc-gen-openapiv2/options/annotations.proto";

option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
  info: {
    title: "Cart API";
    version: "1.0";
    description: "API for managing shopping cart actions such as adding, removing, and viewing toys in the cart.";
    contact: {
      name: "Support Team";
      url: "https://yourdomain.com";
      email: "support@yourdomain.com";
    }
  };
  schemes: HTTPS;
  consumes: "application/json";
  produces: "application/json";
};

service Cart {
  rpc AddToCart (AddToCartRequest) returns (AddToCartResponse) {
    option (google.api.http) = {
      post: "/v1/cart"
      body: "toy"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary: "Add a toy to cart"
      description: "Adds a toy to the user's shopping cart."
    };
  }

  rpc DelFromCart (DelFromCartRequest) returns (DelFromCartResponse) {
    option (google.api.http) = {
      delete: "/v1/cart/{toy_id}"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary: "Remove a toy from cart"
      description: "Deletes a toy from the user's cart by toy ID."
    };
  }

  rpc GetCart (GetCartRequest) returns (GetCartResponse) {
    option (google.api.http) = {
      get: "/v1/cart"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary: "Get cart contents"
      description: "Retrieves the current list of toys in the user's cart."
    };
  }
}


service CartService {
  rpc AddToCart (AddToCartRequest) returns (AddToCartResponse);
  rpc DelFromCart (DelFromCartRequest) returns (DelFromCartResponse);
  rpc GetCart (GetCartRequest) returns (GetCartResponse);
}

enum OperationStatus {
  STATUS_OK = 0;
  STATUS_INVALID_TOY = 1;
  STATUS_INVALID_USER = 2;
  STATUS_INVALID_QTY = 3;
  STATUS_INTERNAL_ERROR = 4;
  STATUS_CART_EMPTY = 5;
  STATUS_TOY_NOT_IN_CART = 6;
  STATUS_UNAUTHORIZED = 7;
  STATUS_DUPLICATE_ITEM = 8;
}

message CartItem {
  int64 toy_id = 1;
  int32 quantity = 2;
}

message AddToCartRequest {
  CartItem toy = 1;
}

message AddToCartResponse {
  OperationStatus opStatus = 1;
  string message = 2;
}

message DelFromCartRequest {
  int64 toy_id = 1;
}

message DelFromCartResponse {
  OperationStatus opStatus = 1;
  string message = 2;
}

message GetCartRequest{}

message GetCartResponse{
  repeated CartItem items = 1;
  int32 total_items = 2;
  int32 total_quantity = 3;
}